type Directory @entity {
  id: Bytes! #address
  owner: Bytes! #address
  treasury: Bytes! #address
  count: BigInt!
  txCount: BigInt!
  volume: BigDecimal!
  earnings: BigDecimal!
  minAmountIn: BigDecimal!
}

type Token @entity {
  id: Bytes! #address
  index: BigInt!
  name: String!
  symbol: String!
  uri: String!
  status: String!
  meme: Bytes! #address
  preMeme: Bytes! #address
  fees: Bytes! #address
  creator: Account! #address
  statusHolder: Bytes! #address
  createdAt: BigInt!
  openAt: BigInt!
  open: Boolean!
  preMemeBalance: BigDecimal!
  baseContributed: BigDecimal!
  reserveVirtualBase: BigDecimal!
  reserveRealBase: BigDecimal!
  reserveRealMeme: BigDecimal!
  totalSupply: BigDecimal!
  floorPrice: BigDecimal!
  marketPrice: BigDecimal!
  marketCap: BigDecimal!
  liquidity: BigDecimal!
  rewardsBase: BigDecimal!
  totalDebt: BigDecimal!
  volume: BigDecimal!
  txCount: BigInt!
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "token")
}

type Transaction @entity {
  id: ID!
  blockNumber: BigInt! # uint256
  timestamp: BigInt! # uint256
  token: Token!
  buys: [Buy!]!
  sells: [Sell!]!
  contributes: [Contribute!]!
}

type Buy @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt! # uint256
  index: BigInt! # uint256
  meme: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  amountIn: BigDecimal!
  amountOut: BigDecimal!
  marketPrice: BigDecimal!
}

type Sell @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt! # uint256
  index: BigInt! # uint256
  meme: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  amountIn: BigDecimal!
  amountOut: BigDecimal!
  marketPrice: BigDecimal!
}

type Contribute @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt! # uint256
  index: BigInt! # uint256
  meme: Bytes! # address
  account: Bytes! # address
  amount: BigDecimal!
  marketPrice: BigDecimal!
}

type TokenHourData @entity {
  id: ID!
  timestamp: BigInt! # uint256
  token: Token!
  marketPrice: BigDecimal!
  hourlyVolume: BigDecimal!
  hourlyTxns: BigInt! # uint256
}

type TokenDayData @entity {
  id: ID!
  timestamp: BigInt! # uint256
  token: Token!
  marketPrice: BigDecimal!
  dailyVolume: BigDecimal!
  dailyTxns: BigInt! # uint256
}

type Account @entity {
  id: Bytes! # address
  providerEarnings: BigDecimal!
  statusEarnings: BigDecimal!
  holderEarnings: BigDecimal!
  referrals: BigInt!
  created: [Token!]! @derivedFrom(field: "creator")
  tokenPositions: [TokenPosition!]! @derivedFrom(field: "account")
}

type TokenPosition @entity {
  id: ID!
  index: BigInt!
  token: Token!
  account: Account!
  balance: BigDecimal!
  claimable: BigDecimal!
  contributed: BigDecimal!
  redeemable: BigDecimal!
  credit: BigDecimal!
  debt: BigDecimal!
  statusHolder: Boolean!
}
